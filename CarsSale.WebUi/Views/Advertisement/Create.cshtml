@using System.Web.UI.WebControls
@model CarsSale.WebUi.Models.Advertisement.CreateAdvertisementViewModel

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link href="~/Content/cars-sale/cars-sale.advertisment-create.css" rel="stylesheet" />
<script src="~/Scripts/cars-sale/modules/cars-sale.advertisment-create.js"></script>

<div class="container">
	<div class="row justify-content-center text-center">
		@using (Html.BeginForm("Create", "Advertisement", null, FormMethod.Post, new {enctype = "multipart/form-data", role = "form"}))
		{
			<div class="justify-content-center">
				<hr />
				<h3>Create new advertisement for sale to CarsSale</h3>
				<hr/>
			</div>
			<fieldset>
				<label class="has-error">
					@Html.ValidationSummary(true)
				</label>
			
				<div class="form-group">
					<h5 class="">Region</h5>
					<div class="input-group">
						@Html.DropDownListFor(x => x.RegionId,
							Model.RegionOptions.Select(x => new SelectListItem
							{
								Text = x.Name,
								Value = x.Id.ToString()
							}),
							"-- Select --",
							new { @class="form-control" })
					</div>
					<div>
						@Html.ValidationMessageFor(x => x.RegionId)
					</div>
				</div>
				<hr>
				<div class="form-group">
					<h5 class="">Brand</h5>
					<div class="input-group">
						@Html.DropDownListFor(x => x.BrandId,
							Model.BrandOptions.Select(x => new SelectListItem
							{
								Text = x.Name,
								Value = x.Id.ToString()
							}),
							"-- Select --",
							new { @class="form-control" })
					</div>
					<div>
						@Html.ValidationMessageFor(x => x.BrandId)
					</div>
				</div>
				<hr>
				<div class="form-group">
					<h5 class="">Vehicl Type</h5>
					<div class="input-group">
						@Html.DropDownListFor(x => x.VehiclTypeId,
							Model.VehiclTypeOptions.Select(x => new SelectListItem
							{
								Text = x.Name,
								Value = x.Id.ToString()
							}),
							"-- Select --",
							new { @class="form-control" })
					</div>
					<div>
						@Html.ValidationMessageFor(x => x.VehiclTypeId)
					</div>
				</div>
				<hr>
				<div class="form-group">
					<h5 class="">Transmission Type</h5>
					<div class="input-group">
						@Html.DropDownListFor(x => x.TransmissionTypeId,
							Model.TransmissionTypeOptions.Select(x => new SelectListItem
							{
								Text = x.Name,
								Value = x.Id.ToString()
							}),
							"-- Select --",
							new { @class="form-control" })
					</div>
					<div>
						@Html.ValidationMessageFor(x => x.TransmissionTypeId)
					</div>
				</div>
				<hr>
				<div>
					<h5>Fuels *</h5>
					<div>
						@foreach (var x in Model.FuelOptions)
						{
							<label class="custom-control custom-checkbox">
								<input type="checkbox"
								       class="custom-control-input"
								       value="@x.Id"
								       checked="@x.Id.Equals(Model.FuelOptions.ElementAt(0).Id)"
								       name="@Html.NameFor(m => m.Fuels)">
								<span class="custom-control-indicator"></span>
								<span class="custom-control-description">
									@x.Name
								</span>
							</label>
						}
					</div>
					<div>
						@Html.ValidationMessageFor(x => x.Fuels)
					</div>
				</div>
				<hr>
				<div>
					<h5>Engine Volume * ( cm<sup>3</sup> )</h5>
					<div>
						<div>
							<label>
								@Html.TextBoxFor(x => x.EngineVolume, new { @class = "form-control text-center" })
							</label>
						</div>
						@Html.ValidationMessageFor(x => x.EngineVolume)
					</div>
				</div>
				<hr>
				<div>
					<h5>Priсe *</h5>
					<div>
						<div>
							<div>
								<label>
									@Html.TextBoxFor(x => x.Price, new {@class = "form-control text-center"})
								</label>
							</div>
							@Html.ValidationMessageFor(x => x.Price)
						</div>
					</div>
					<div>
						<div>
							@foreach (var x in Model.CurrencyOptions)
							{
								<label class="custom-control custom-radio">
									@Html.RadioButtonFor(m => m.CurrencyId, x.Id, new
									{
										@class="custom-control-input"
									})
									<span class="custom-control-indicator"></span>
									<span class="custom-control-description">
										@x.Sign
										<span class="badge"> (@x.Code)</span>
									</span>
								</label>
							}
						</div>
						@Html.ValidationMessageFor(x => x.CurrencyId)
					</div>
				</div>
				<hr>
				<div>
					<h5>Select Photo *</h5>
					<div>
						@Html.ValidationMessageFor(model => model.Image)
					</div>
					<div>
						<div class="image-container">
							<div class="no-photo">
								<img src="~/Images/cars-sale/camera-icon.gif" class="img-fluid rounded" alt="Responsive image">
							</div>
							<div class="image-content">
								<img id="photo" src="~/Images/cars-sale/camera-icon.gif" class="img-fluid" alt="Responsive image">
							</div>
						</div>
						<div class="btn btn-primary" id="photo-btn">
							Browse
							@Html.TextBoxFor(x => x.Image, new
							{
								id = "photo-btn-input",
								type = "file",
								name = Model.Image,
								accept = "image/jpg, image/jpeg, image/png"
							})
						</div>
					</div>
				</div>
				<hr>
				<div class="form-group">
					<div>
						<button type="submit" class="btn btn-primary">Create Advertisment</button>
					</div>
				</div>
			</fieldset>
		}
	</div>
</div>


